[tool.poetry]
name = "withsecure-ml"
version = "0.1.0"
description = "Binary Classification ML Pipeline with MLOps Best Practices"
authors = ["Moe.Eisa <mohamed.abdulaziz.eisa@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.12.2"
scikit-learn = "^1.6.0"
pandas = "^2.3.1"
numpy = "^1.26.4"
pydantic-settings = "^2.0.3"
loguru = "^0.7.2"

scipy = "^1.11.0"
psutil = "^5.9.0"
joblib = "^1.3.0"
imbalanced-learn = "^0.13.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.13"
black = "^23.12.1"
pytest = "^7.4.0"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "F401",  # imported but unused
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true
show_error_codes = false

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "pandas.*",
    "numpy.*",
    "loguru.*",
    "psutil.*",
    "joblib.*",
    "config.*",
    "model.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "config.config"
ignore_errors = true
